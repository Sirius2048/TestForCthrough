//
// Generated file, do not edit! Created by nedtool 5.6 from packet/BufferLength.msg.
//

#ifndef __BUFFERLENGTH_M_H
#define __BUFFERLENGTH_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>packet/BufferLength.msg:19</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet BufferLength
 * {
 *     float buf_len[];
 * }
 * </pre>
 */
class BufferLength : public ::omnetpp::cPacket
{
  protected:
    float *buf_len; // array ptr
    unsigned int buf_len_arraysize;

  private:
    void copy(const BufferLength& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BufferLength&);

  public:
    BufferLength(const char *name=nullptr, short kind=0);
    BufferLength(const BufferLength& other);
    virtual ~BufferLength();
    BufferLength& operator=(const BufferLength& other);
    virtual BufferLength *dup() const override {return new BufferLength(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual void setBuf_lenArraySize(unsigned int size);
    virtual unsigned int getBuf_lenArraySize() const;
    virtual float getBuf_len(unsigned int k) const;
    virtual void setBuf_len(unsigned int k, float buf_len);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const BufferLength& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, BufferLength& obj) {obj.parsimUnpack(b);}


#endif // ifndef __BUFFERLENGTH_M_H

